#ifndef KAMSTRUP_REQUESTS_H
#define KAMSTRUP_REQUESTS_H

#include <Arduino.h> // For uint8_t

// Request to wake up the meter and get basic info
const uint8_t initRequest[] = {0x80, 0x3F, 0x10, 0x01, 0x03, 0xE9, 0x7C, 0xD4, 0x0D};
// Request for current meter readings
const uint8_t currentRequest[] = {0x80, 0x3F, 0x10, 0x04, 0x00, 0x44, 0x00, 0x4A, 0x01, 0x24, 0x01, 0x2B, 0xBD, 0x6B, 0x0D};
// 68 answer on 10 11
const uint8_t Volume_V1_DayRequest[] = {0x80, 0x3F, 0x66, 0x00, 0x44, 0x00, 0x01, 0x01, 0x86, 0xE0, 0x0D};
// 241 answer on 8 9
const uint8_t FlowMax_DayRequest[] = {0x80, 0x3F, 0x66, 0x00, 0xF1, 0x00, 0x01, 0x01, 0xCB, 0x74, 0x0D};
// 242 answer on 8 9
const uint8_t FlowMin_DayRequest[] = {0x80, 0x3F, 0x66, 0x00, 0xF2, 0x00, 0x01, 0x01, 0x50, 0xA8, 0x0D};
// 296 answer on 8
const uint8_t TempWaterMin_DayRequest[] = {0x80, 0x3f, 0x66, 0x01, 0x28, 0x00, 0x01, 0x01, 0x3a, 0x51, 0x0d};
// 297 answer on 8
const uint8_t TempWaterMax_DayRequest[] = {0x80, 0x3f, 0x66, 0x01, 0x29, 0x00, 0x01, 0x01, 0x4c, 0xe5, 0x0d};
// 298 answer on 8
const uint8_t TempWaterAvg_DayRequest[] = {0x80, 0x3f, 0x66, 0x01, 0x2a, 0x00, 0x01, 0x01, 0xd7, 0x39, 0x0d};
// 299 answer on 8
const uint8_t TempMeterMin_DayRequest[] = {0x80, 0x3f, 0x66, 0x01, 0x2f, 0x00, 0x01, 0x01, 0x6b, 0x7c, 0x0d};
// 304 answer on 8
const uint8_t TempMeterMax_DayRequest[] = {0x80, 0x3f, 0x66, 0x01, 0x30, 0x00, 0x01, 0x01, 0xa4, 0x35, 0x0d};
// 305 answer on 8
const uint8_t TempMeterAvg_DayRequest[] = {0x80, 0x3f, 0x66, 0x01, 0x31, 0x00, 0x01, 0x01, 0xd2, 0x81, 0x0d};
// 1003 
const uint8_t Register1003_DailyRequest[] = {0x80, 0x3f, 0x66, 0x03, 0xeb, 0x00, 0x01, 0x01, 0x56, 0xaa, 0x0d};
// 1004 Hour Counter
const uint8_t Register1004_HourCounterRequest[] = {0x80, 0x3f, 0x66, 0x03, 0xec, 0x00, 0x01, 0x01, 0x07, 0x87, 0x0d};
// 99 Info answer 8 9
const uint8_t Info_DayRequest[] = {0x80, 0x3f, 0x66, 0x00, 0x63, 0x00, 0x01, 0x01, 0xe0, 0x83, 0x0d};

// Month data requests register 0x65
// start with 2 x init 
// Volume_V1 68
const uint8_t Volume_V1_MonthRequest[] = {0x80, 0x3f, 0x65, 0x00, 0x44, 0x00, 0x01, 0x01, 0x48, 0x00, 0x0d};
// Hour_counter 1004
const uint8_t Hour_counter_MonthRequest[] = {0x80, 0x3f, 0x65, 0x03, 0xec, 0x00, 0x01, 0x01, 0xc9, 0x67, 0x0d};
// 99 Info answer 8 9
const uint8_t Info_MonthRequest[] = {0x80, 0x3f, 0x65, 0x00, 0x63, 0x00, 0x01, 0x01, 0x2e, 0x63, 0x0d};

const uint8_t FlowMaxDate_MonthRequest[] = {0x80, 0x3f, 0x65, 0x00, 0x8a, 0x00, 0x01, 0x01, 0x59, 0xfe, 0x0d};

const uint8_t FlowMax_MonthRequest[] = {0x80, 0x3f, 0x65, 0x00, 0x8b, 0x00, 0x01, 0x01, 0x2f, 0x4a, 0x0d};

const uint8_t FlowMinDate_MonthRequest[] = {0x80, 0x3f, 0x65, 0x00, 0x8c, 0x00, 0x01, 0x01, 0x7e, 0x67, 0x0d};

const uint8_t FlowMin_MonthRequest[] = {0x80, 0x3f, 0x65, 0x00, 0x8d, 0x00, 0x01, 0x01, 0x08, 0xd3, 0x0d};

const uint8_t V1_reverse_MonthRequest[] = {0x80, 0x3f, 0x65, 0x00, 0xf3, 0x00, 0x01, 0x01, 0xe8, 0xfc, 0x0d};

const uint8_t TempWaterMin_MonthRequest[] = {0x80, 0x3f, 0x65, 0x01, 0x25, 0x00, 0x01, 0x01, 0xcd, 0x37, 0x0d};

const uint8_t TempWaterMax_MonthRequest[] = {0x80, 0x3f, 0x65, 0x01, 0x26, 0x00, 0x01, 0x01, 0x56, 0xeb, 0x0d};

const uint8_t TempWaterAvg_MonthRequest[] = {0x80, 0x3f, 0x65, 0x01, 0x27, 0x00, 0x01, 0x01, 0x20, 0x5f, 0x0d};

const uint8_t TempMeterMin_MonthRequest[] = {0x80, 0x3f, 0x65, 0x01, 0x2c, 0x00, 0x01, 0x01, 0x3e, 0x1b, 0xbf, 0x0d};

const uint8_t TempMeterMax_MonthRequest[] = {0x80, 0x3f, 0x65, 0x01, 0x2d, 0x00, 0x01, 0x01, 0x48, 0xf4, 0x0d};

const uint8_t TempMeterAvg_MonthRequest[] = {0x80, 0x3f, 0x65, 0x01, 0x2e, 0x00, 0x01, 0x01, 0xd3, 0x28, 0x0d};

// Yearly data requests register 0x64
// start with 2 x init 
const uint8_t Volume_V1_YearRequest[] = {0x80, 0x3f, 0x64, 0x00, 0x44, 0x00, 0x01, 0x01, 0x1b, 0xf2, 0xa0, 0x0d};
// Hour_counter 1004
const uint8_t Hour_counter_YearRequest[] = {0x80, 0x3f, 0x64, 0x03, 0xec, 0x00, 0x01, 0x01, 0x8c, 0xc7, 0x0d};

const uint8_t FlowMaxDate_YearRequest[] = {0x80, 0x3f, 0x64, 0x00, 0x7b, 0x00, 0x01, 0x01, 0xf5, 0xa7, 0x0d};

const uint8_t FlowMax_YearRequest[] = {0x80, 0x3f, 0x64, 0x00, 0x7c, 0x00, 0x01, 0x01, 0xa4, 0x8a, 0x0d};

const uint8_t FlowMinData_YearRequest[] = {0x80, 0x3f, 0x64, 0x00, 0x7d, 0x00, 0x01, 0x01, 0xd2, 0x3e, 0x0d};

const uint8_t FlowMin_YearRequest[] = {0x80, 0x3f, 0x64, 0x00, 0x7e, 0x00, 0x01, 0x01, 0x49, 0xe2, 0x0d};

const uint8_t V1_reverse_YearRequest[] = {0x80, 0x3f, 0x64, 0x00, 0xf3, 0x00, 0x01, 0x01, 0xad, 0x5c, 0x0d};

const uint8_t TempWaterMin_YearRequest[] = {0x80, 0x3f, 0x64, 0x01, 0xbf, 0x00, 0x01, 0x01, 0x26, 0xa3, 0x0d};

const uint8_t TempWaterMax_YearRequest[] = {0x80, 0x3f, 0x64, 0x01, 0xc0, 0x00, 0x01, 0x01, 0xb0, 0x38, 0x0d};

const uint8_t TempMeterMin_YearRequest[] = {0x80, 0x3f, 0x64, 0x01, 0xc2, 0x00, 0x01, 0x01, 0x5d, 0x50, 0x0d};

const uint8_t TempMeterMax_YearRequest[] = {0x80, 0x3f, 0x64, 0x01, 0xc3, 0x00, 0x01, 0x01, 0x2b, 0xe4, 0x0d};

#endif // KAMSTRUP_REQUESTS_H